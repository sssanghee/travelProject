package com.travel.controller;

import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.List;
import java.util.Map;
import java.util.UUID;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.core.io.FileSystemResource;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.multipart.MultipartHttpServletRequest;
import org.springframework.web.servlet.ModelAndView;

import com.travel.model.Board;
import com.travel.service.BoardService;
import com.travel.service.FileService;

@CrossOrigin(origins = "http://localhost:3000")
@RestController
@RequestMapping("/api/board")
public class BoardController {
	
	@Value("${file.path")
	private String fileRealPath;

	@Autowired
	BoardService boardService;
	
	@Autowired
	FileService fileService;
	


	@PostMapping("/uploadImage")
	public ResponseEntity<?> uploadImage(
//			@RequestParam(value="file", required=false) 
			@ModelAttribute MultipartFile file) {
		
		System.out.println("컨트롤러 진입");
		System.out.println(file);

		System.out.println(file.getOriginalFilename());
		System.out.println(file.getContentType());
		System.out.println(file.getSize());
		System.out.println(file.getName());
				
		UUID uuid = UUID.randomUUID();
		
		String uuidFilename = uuid + "_" + file.getOriginalFilename();
		String samplePath = "C:/studyStored/"+uuidFilename;
		
		System.out.println(samplePath);
		
		try {
			file.transferTo(new File(samplePath));
//			FileSystemResource resource = new FileSystemResource(samplePath);
//			HttpHeaders header = new HttpHeaders();
//			Path filePath = null;
//			filePath = Paths.get(samplePath);
//			header.add("Content-Type", Files.probeContentType(filePath));
//			
//			System.out.println(resource);
//			System.out.println(header);
//			return new ResponseEntity<>(resource, header, HttpStatus.OK);
			
			return new ResponseEntity<>(uuidFilename, HttpStatus.OK);
			
		} catch(Exception e) {
			e.printStackTrace();
			return new ResponseEntity<>(samplePath, HttpStatus.OK);
		}
	}
	
	

	
	
	
}
